 ContactPage
 Thanks for sharing the screenshots and your `ContactPage.jsx` code.

### ✅ Summary of Your Problem:
Your contact form is showing a **success popup**, but **no data is being saved to MongoDB**.

### 🧠 Why This Is Happening:
In the `ContactPage.jsx` file, the form **does not make an actual API request to your backend**. Right now, it's only triggering an `alert()` on submit.

---

### ✅ What Needs to Be Fixed:
You need to connect the frontend form to your backend API endpoint using **`fetch()` or `axios`** so the data can be sent to MongoDB.

---

### ✅ Updated `handleSubmit()` Function (Replace it):

```js
const handleSubmit = async (e) => {
  e.preventDefault();

  try {
    const response = await fetch("http://localhost:5000/api/contact", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(form),
    });

    const data = await response.json();

    if (response.ok) {
      alert("Message submitted! We will contact you shortly.");
      setForm({ name: '', phone: '', email: '', subject: '', message: '' });
    } else {
      alert(data.error || "Failed to submit. Please try again later.");
    }
  } catch (error) {
    console.error("Submission error:", error);
    alert("Error submitting form. Try again later.");
  }
};
```

---

### 🛠️ Step-by-Step Instructions to Fix It:

1. **Open File**  
   Open this file:  
   👉 `frontend/src/pages/ContactPage.jsx`

2. **Replace the Existing `handleSubmit()` Function**  
   Replace the existing `handleSubmit = (e) => { ... }` with the new async function above.

3. **Ensure Your Backend Is Running**  
   In a separate VS Code terminal, run:
   ```bash
   node server.js
   ```

4. **Ensure MongoDB is Running**  
   Open a new terminal and run:
   ```bash
   mongod --dbpath="C:\data\db"
   ```

5. **Test Again**  
   Go to your form in the browser at:  
   👉 `http://localhost:5173/contact-page`  
   Fill it and click **Send Message**.

6. **Verify in MongoDB Compass**  
   Open MongoDB Compass, connect with:
   ```
   mongodb://localhost:27017
   ```
   Then go to:
   - Database: `thiaworld`
   - Collection: `contacts`

---

### ✅ Additional Recommendations:
- Don't forget to **import `cors`** and allow cross-origin requests in your backend.
- You can also **log the incoming request** in your backend like this:
   ```js
   console.log(req.body); // Inside your contact controller
   ```

---

Would you like me to update your backend controller and router code too for final verification?


const handleSubmit = async (e) => {
  e.preventDefault();

  try {
    const response = await fetch("http://localhost:5000/api/contact", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(form),
    });

    const data = await response.json();

    if (response.ok) {
      alert("Message submitted! We will contact you shortly.");
      setForm({ name: '', phone: '', email: '', subject: '', message: '' });
    } else {
      alert(data.error || "Failed to submit. Please try again later.");
    }
  } catch (error) {
    console.error("Submission error:", error);
    alert("Error submitting form. Try again later.");
  }
};



mongoose
  .connect('mongodb://127.0.0.1:27017/thiaworld', {
    useNewUrlParser: true,
    useUnifiedTopology: true
  })
  .then(() => console.log("✅ MongoDB connected"))
  .catch((err) => console.error("❌ MongoDB error:", err));


const mongoose = require('mongoose');

const contactSchema = new mongoose.Schema({
  name: String,
  phone: String,
  email: String,
  subject: String,
  message: String,
}, {
  timestamps: true
});

module.exports = mongoose.model('Contact', contactSchema);


const express = require('express');
const router = express.Router();
const Contact = require('../models/contactModel');

// POST route
router.post('/', async (req, res) => {
  try {
    const newContact = new Contact(req.body);
    await newContact.save();
    res.status(201).json({ message: "Contact submitted successfully" });
  } catch (error) {
    console.error("Contact Save Error:", error);
    res.status(500).json({ error: "Something went wrong" });
  }
});

module.exports = router;


const contactRoutes = require('./routes/contactRoutes');
app.use('/api/contact', contactRoutes);


const cors = require('cors');
app.use(cors());
app.use(express.json());


const handleSubmit = async (e) => {
  e.preventDefault();
  try {
    const response = await fetch("http://localhost:5000/api/contact", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(form),
    });

    const data = await response.json();
    if (response.ok) {
      alert("Message submitted! We will contact you shortly.");
      setForm({ name: '', phone: '', email: '', subject: '', message: '' });
    } else {
      alert(data.error || "Failed to submit");
    }
  } catch (err) {
    console.error("Error:", err);
    alert("Something went wrong.");
  }
};


const express = require('express');
const router = express.Router();
const Contact = require('../models/contactModel');

router.post('/', async (req, res) => {
  try {
    const newContact = new Contact(req.body);
    await newContact.save();
    console.log("🟢 New contact saved:", newContact);
    res.status(201).json({ message: 'Contact submitted successfully' });
  } catch (error) {
    console.error("❌ Error saving contact:", error);
    res.status(500).json({ error: 'Failed to save contact' });
  }
});

module.exports = router;


const express = require('express');
const mongoose = require('mongoose');
const cors = require('cors');
const contactRoutes = require('./routes/contactRoutes');

const app = express();
const PORT = 5000;

app.use(cors());
app.use(express.json());

app.use('/api/contact', contactRoutes);

mongoose.connect('mongodb://localhost:27017/thiaworld', {
  useNewUrlParser: true,
  useUnifiedTopology: true
})
.then(() => {
  console.log("✅ MongoDB Connected");
  app.listen(PORT, () => {
    console.log(`🚀 Server running at http://localhost:${PORT}`);
  });
})
.catch((error) => {
  console.error("❌ MongoDB Connection Failed", error);
});


const handleSubmit = async (e) => {
  e.preventDefault();

  const formData = {
    name: form.name,
    phone: form.phone,
    email: form.email,
    subject: form.subject,
    message: form.message
  };

  try {
    const res = await fetch("http://localhost:5000/api/contact", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(formData)
    });

    const result = await res.json();
    if (res.ok) {
      alert("Message submitted! We will contact you shortly.");
      setForm({ name: "", phone: "", email: "", subject: "", message: "" });
    } else {
      alert("Failed to submit");
    }
  } catch (err) {
    console.error("Submit error:", err);
    alert("Something went wrong");
  }
};


const Contact = require('../models/contactmodel');

exports.submitContact = async (req, res) => {
  try {
    const { name, phone, email, subject, message } = req.body;

    if (!name || !email || !message) {
      return res.status(400).json({ message: 'Required fields missing' });
    }

    const contact = new Contact({ name, phone, email, subject, message });
    await contact.save();
    res.status(201).json({ message: 'Contact submitted successfully' });
  } catch (error) {
    console.error('❌ MongoDB error:', error.message);
    res.status(500).json({ message: 'Internal server error' });
  }
};



const mongoose = require('mongoose');

const contactSchema = new mongoose.Schema({
  name: String,
  phone: String,
  email: String,
  subject: String,
  message: String
}, { timestamps: true });

module.exports = mongoose.model('Contact', contactSchema);


const express = require('express');
const router = express.Router();
const { submitContact } = require('../controllers/contactcontroller');

router.post('/contact', submitContact);

module.exports = router;


const express = require('express');
const mongoose = require('mongoose');
const cors = require('cors');
const contactRoutes = require('./routes/contactroutes');

const app = express();
app.use(cors());
app.use(express.json());


// DB CONNECTION
mongoose.connect('mongodb://127.0.0.1:27017/Thia', {
  useNewUrlParser: true,
  useUnifiedTopology: true
}).then(() => console.log("✅ MongoDB Connected"))
  .catch((err) => console.error("❌ MongoDB Error:", err.message));

const PORT = 5000;
app.listen(PORT, () => console.log(`🚀 Server running on port ${PORT}`));


const mongoose = require('mongoose');

mongoose.connect('mongodb://127.0.0.1:27017/Thia', {
  useNewUrlParser: true,
  useUnifiedTopology: true,
})
.then(() => console.log("✅ MongoDB connected"))
.catch(err => console.error("❌ MongoDB connection error:", err)); 
